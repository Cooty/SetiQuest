{"version":3,"sources":["app.home.min.js"],"names":["SETI","Plugins","init","initDOMElements","initTooltips","$tooltips","length","each","$tooltip","$","this","data","tooltipster","theme","side","$nanoScrollers","Aladin","mobile","container","render","addEvents","getObservationData","getConstellationVectors","promise","ajax","url","$aladinAppContainer","done","fail","errorHandler","always","requestHandler","zoomIn","$btn","fov","aladinInstance","getFov","zoomIncrement","maxZoomInLevel","setFov","$zoomOutBtn","attr","zoomOut","maxZoomOutLevel","$zoomInBtn","toggleConstellations","aladinConstellationsOn","aladinConstellationOverlay","hide","show","A","aladin","showReticle","initialZoom","showLayersControl","showGotoControl","showZoomControl","showFrame","showCooGrid","showShareControl","log","fullScreen","showFullscreenControl","target","Modernizr","fullscreen","$fullScreenBtn","on","click","toggleFullscreen","$notes","toggleClass","notesCSSClass","e","currentTarget","$constellationsBtn","document","getElementById","$body","Performance","getCachedDOM","body","aladinAppContainer","find","$setCenterBtn","isFullScreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","blur","dataType","jsonpCallback","success","response","graphicOverlay","color","lineWidth","name","addOverlay","a","i","j","thisRA","parseFloat","thisDec","thisMag","p","push","add","polyline","lastRA","lastDec","lastMag","error","self","handleError","BackgroundVideo","hasSeenHero","window","getCookie","addVideo","$page","$hero","videoSource","videoTemplate","Handlebars","compile","innerHTML","video","videoloop","after","bgVideoElement","addEventListener","addClass","videoPlayingModifier","getVideoElement","getBgVideo","Hero","cssanimations","$html","animationend","fadeOut","$aladin","setCookie","bgVideo","pause","Home","instance","getInstance"],"mappings":"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","file":"app.home.min.js","sourcesContent":["/**\r\n * Handles the 3rd party jQuery plugins we use on the Aladin canvas\r\n * For docs on the tooltip plugin see.: https://iamceege.github.io/tooltipster/\r\n *\r\n * @namespace SETI\r\n * @name SETI.Plugins\r\n *\r\n */\r\nSETI.Plugins = (/** @lends SETI.Plugins */function() {\r\n\r\n    var $tooltips,\r\n        theme = 'tooltipster-borderless',\r\n        $nanoScrollers;\r\n\r\n    /**\r\n     * Initialize the module\r\n     *\r\n     * @public\r\n     * @returns {void}\r\n     */\r\n    function init() {\r\n        initDOMElements();\r\n        initTooltips();\r\n    }\r\n\r\n    function initTooltips() {\r\n\r\n        if($tooltips.length) {\r\n            $tooltips.each(function() {\r\n                var $tooltip = $(this);\r\n\r\n                if($tooltip.data('side')) {\r\n                    $tooltip.tooltipster({\r\n                        theme: theme,\r\n                        side: $tooltip.data('side')\r\n                    });\r\n                } else {\r\n                    $tooltip.tooltipster({\r\n                        theme: theme,\r\n                        side: $tooltip.data('side')\r\n                    });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Get DOM elements for the module\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    function initDOMElements() {\r\n        $tooltips = $('[data-tooltip]');\r\n        $nanoScrollers = $('[data-nanoscroller]');\r\n    }\r\n\r\n\r\n    return {\r\n        init: init\r\n    };\r\n\r\n}());\r\n\r\n/**\r\n * Responsible for showing Aladin starmap on the homepage (initialy hidden)\r\n *\r\n * @namespace SETI\r\n * @name SETI.Aladin\r\n *\r\n */\r\nSETI.Aladin = (/** @lends SETI.Aladin */function() {\r\n\r\n\tvar aladinInstance,\r\n        container,\r\n        $zoomInBtn,\r\n        $aladinAppContainer,\r\n        aladinAppContainer,\r\n        $zoomOutBtn,\r\n        $constellationsBtn,\r\n        $setCenterBtn,\r\n        $fullScreenBtn,\r\n        $body,\r\n        $notes,\r\n        notesCSSClass = 'notes--opened',\r\n        body,\r\n        aladinConstellationsOn = true,\r\n        isFullScreen = false,\r\n        initialZoom = 1,\r\n        zoomIncrement = 0.2,\r\n        maxZoomInLevel = 0.3,\r\n        maxZoomOutLevel = 12,\r\n        aladinConstellationOverlay;\r\n\r\n\t/**\r\n\t * Initialize the module\r\n\t *\r\n\t * @public\r\n\t * @returns {void}\r\n\t */\r\n\tfunction init() {\r\n\t    if(!SETI.mobile) {\r\n            initDOMElements();\r\n            if(container) {\r\n                render();\r\n                addEvents();\r\n                getObservationData();\r\n                getConstellationVectors();\r\n                SETI.Plugins.init();\r\n            }\r\n        }\r\n\t}\r\n\r\n\tfunction getObservationData() {\r\n        var promise = $.ajax({\r\n            url: $aladinAppContainer.data('service-url')\r\n        });\r\n\r\n        promise.done(function(data) {\r\n            console.log(data);\r\n        });\r\n        promise.fail(errorHandler);\r\n        promise.always(requestHandler);\r\n    }\r\n\r\n    function requestHandler() {\r\n\t    console.log('do this stuff whenever data is revieved from server');\r\n    }\r\n\r\n    function errorHandler() {\r\n        console.log('do this stuff when error happens');\r\n    }\r\n\r\n    function zoomIn($btn) {\r\n        var fov = aladinInstance.getFov();\r\n\r\n        fov = fov[0] - zoomIncrement;\r\n\r\n        if(fov > maxZoomInLevel) {\r\n            aladinInstance.setFov(fov);\r\n\r\n            if($zoomOutBtn.attr('disabled')) {\r\n                $zoomOutBtn.attr('disabled', false);\r\n            }\r\n\r\n        } else {\r\n            $btn.attr('disabled', true);\r\n        }\r\n\r\n    }\r\n\r\n    function zoomOut($btn) {\r\n        var fov = aladinInstance.getFov();\r\n\r\n        fov = fov[0] + zoomIncrement;\r\n\r\n        if(fov < maxZoomOutLevel) {\r\n            aladinInstance.setFov(fov);\r\n\r\n            if($zoomInBtn.attr('disabled')) {\r\n                $zoomInBtn.attr('disabled', false);\r\n            }\r\n\r\n        } else {\r\n            $btn.attr('disabled', true);\r\n        }\r\n\r\n    }\r\n\r\n    function toggleConstellations() {\r\n\r\n        if (aladinConstellationsOn) {\r\n            aladinConstellationOverlay.hide();\r\n            aladinConstellationsOn = false;\r\n        }\r\n        else {\r\n            aladinConstellationsOn = true;\r\n            aladinConstellationOverlay.show();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Initialize and render the star map to the DOM\r\n     * \r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    function render() {\r\n        aladinInstance = A.aladin(container, {\r\n            showReticle: false,\r\n            fov: initialZoom,\r\n            showLayersControl: false,\r\n            showGotoControl: false,\r\n            showZoomControl: false,\r\n            showFrame: false,\r\n            showCooGrid: false,\r\n            showShareControl: false,\r\n            log: false,\r\n            fullScreen: false,\r\n            showFullscreenControl: false,\r\n            target: 0.0 + \",\" + 0.0\r\n        });\r\n        console.log(aladinInstance);\r\n    }\r\n\r\n    function addEvents() {\r\n        if(Modernizr.fullscreen) {\r\n            $fullScreenBtn.on({\r\n                click: toggleFullscreen\r\n            });\r\n        } else {\r\n            $fullScreenBtn.hide();\r\n        }\r\n\r\n        // Toggle notifications box\r\n        $notes.on({\r\n            click: function() {\r\n                $notes.toggleClass(notesCSSClass);\r\n            }\r\n        }, '[data-notes-header]');\r\n\r\n        $zoomInBtn.on({\r\n            click: function(e) {\r\n                zoomIn($(e.currentTarget));\r\n            }\r\n        });\r\n\r\n        $zoomOutBtn.on({\r\n            click: function(e) {\r\n                zoomOut($(e.currentTarget));\r\n            }\r\n        });\r\n\r\n        $constellationsBtn.on({\r\n            click: toggleConstellations\r\n        });\r\n\r\n    }\r\n\r\n\t/**\r\n\t * Get DOM elements for the module\r\n\t *\r\n\t * @private\r\n\t * @returns {void}\r\n\t */\r\n\tfunction initDOMElements() {\r\n        container = document.getElementById('js-aladin-container');\r\n        $body = SETI.Performance.getCachedDOM().$body;\r\n        body = $body[0];\r\n\r\n        $aladinAppContainer = $('#js-aladin');\r\n        aladinAppContainer = $aladinAppContainer[0];\r\n        $zoomInBtn = $aladinAppContainer.find('[data-zoom-in]');\r\n        $zoomOutBtn = $aladinAppContainer.find('[data-zoom-out]');\r\n        $constellationsBtn = $aladinAppContainer.find('[data-constellations]');\r\n        $setCenterBtn = $aladinAppContainer.find('[data-set-center]');\r\n        $fullScreenBtn = $aladinAppContainer.find('[data-fullscreen]');\r\n        $notes = $('[data-notes]');\r\n\t}\r\n\r\n\tfunction toggleFullscreen() {\r\n        if(!isFullScreen) {\r\n            // We need to set the whole <body> to full screen not just the Aladin <div> because the tooltips\r\n            // get appended to the <body> via JS end they would not be visible\r\n            if (body.requestFullscreen) {\r\n                body.requestFullscreen();\r\n                isFullScreen = true;\r\n            } else if (body.webkitRequestFullscreen) {\r\n                body.webkitRequestFullscreen();\r\n                isFullScreen = true;\r\n            } else if (body.mozRequestFullScreen) {\r\n                body.mozRequestFullScreen();\r\n                isFullScreen = true;\r\n            } else if (body.msRequestFullscreen) {\r\n                body.msRequestFullscreen();\r\n                isFullScreen = true;\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n                isFullScreen = false;\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n                isFullScreen = false;\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n                isFullScreen = false;\r\n            } else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n                isFullScreen = false;\r\n            }\r\n        }\r\n\r\n        $(this).toggleClass('reverse-arrows');\r\n        $body.toggleClass('aladin-fullscreen');\r\n\r\n        this.blur();\r\n\r\n    }\r\n\r\n    function getConstellationVectors() {\r\n        $.ajax({\r\n            // url: \"http://feeds.setiquest.info/constellations.jsonp\",\r\n            url: \"data/constellations.jsonp\",\r\n            dataType: \"jsonp\",\r\n            jsonpCallback: 'constellations',  // You don't need this, see below\r\n            success: function (response) {\r\n                aladinConstellationOverlay = A.graphicOverlay({\r\n                    color: '#444444',\r\n                    lineWidth: 1.0,\r\n                    name: \"constellations\"\r\n                });\r\n                aladinInstance.addOverlay(aladinConstellationOverlay);\r\n                var a = [];\r\n                for (var i = 0; i < response[\"constellations\"].length; i++) {\r\n                    var name = response[\"constellations\"][i][0];\r\n\r\n                    for (var j = 1; j < response[\"constellations\"][i].length; j += 3) {\r\n                        var thisRA = parseFloat(response[\"constellations\"][i][j]);\r\n                        var thisDec = parseFloat(response[\"constellations\"][i][j + 1]);\r\n                        var thisMag = parseFloat(response[\"constellations\"][i][j + 2]);\r\n                        if (thisRA < 25.0) {\r\n                            //console.log(thisRA + \",\" + thisDec);\r\n                            p = [];\r\n                            p.push(thisRA * 15.0);\r\n                            p.push(thisDec);\r\n                            a.push(p);\r\n                        }\r\n                        else {\r\n                            aladinConstellationOverlay.add(A.polyline(a));\r\n                            a = [];\r\n                        }\r\n                        lastRA = thisRA;\r\n                        lastDec = thisDec;\r\n                        lastMag = thisMag;\r\n                    }\r\n\r\n                }\r\n            },\r\n            error: self.handleError\r\n        });\r\n    }\r\n\r\n\treturn {\r\n\t\tinit: init\r\n\t};\r\n\r\n}());\r\n\r\n// Start up Aladin Lite\r\n/*var aladin = A.aladin('#aladin-lite-div', {target: '12 25 41.512 +12 48 47.2', fov: 0.8});\r\n\r\n// define custom draw function\r\nvar drawFunction = function(source, canvasCtx, viewParams) {\r\n    canvasCtx.beginPath();\r\n    canvasCtx.arc(source.x, source.y, source.data['size'] * 2, 0, 2 * Math.PI, false);\r\n    canvasCtx.closePath();\r\n    canvasCtx.strokeStyle = '#c38';\r\n    canvasCtx.lineWidth = 3;\r\n    canvasCtx.globalAlpha = 0.7;\r\n        canvasCtx.stroke();\r\n    var fov = Math.max(viewParams['fov'][0], viewParams['fov'][1]);\r\n\r\n    // object name is displayed only if fov<10°\r\n    if (fov>10) {\r\n        return;\r\n    }\r\n\r\n    canvasCtx.globalAlpha = 0.9;\r\n    canvasCtx.globalAlpha = 1;\r\n\r\n    var xShift = 20;\r\n\r\n    canvasCtx.font = '15px Arial'\r\n    canvasCtx.fillStyle = '#eee';\r\n    canvasCtx.fillText(source.data['name'], source.x + xShift, source.y -4);\r\n\r\n    // object type is displayed only if fov<2°\r\n    if (fov>2) {\r\n        return;\r\n    }\r\n    canvasCtx.font = '12px Arial'\r\n    canvasCtx.fillStyle = '#abc';\r\n    canvasCtx.fillText(source.data['otype'], source.x + 2 + xShift, source.y + 10);\r\n};\r\n\r\n// create sources objects\r\nvar M87 = A.source(187.7059308, 12.3911233, {name: 'M 87', size: 4.5, otype: 'LINER AGN'});\r\nvar M49 = A.source(187.444992, 8.000411, {name: 'M 49', size: 6.28, otype: 'Seyfert 2'});\r\nvar M100 = A.source(185.728746, 15.822381, {name: 'M 100', size: 7.23, otype: 'AGN'});\r\nvar M84 = A.source(186.26559721, 12.88698314, {name: 'M 84', size: 3.91, otype: 'Seyfert 2'});\r\nvar M60 = A.source(190.916700, 11.552611, {name: 'M 60', size: 4.75, otype: 'Galaxy in pair of galaxies'});\r\nvar NGC4388 = A.source(186.445083, 12.662069 , {name: 'NGC 4388', size: 3.72, otype: 'Seyfert 2'});\r\nvar NGC4261 = A.source(184.84673421, 5.82491522 , {name: 'NGC 4261', size: 2.78, otype: 'LINER AGN'});\r\nvar M86 = A.source(186.549225, 12.945969, {name: 'M 86', size: 6.03, otype: 'Galaxy in group of galaxies'});\r\n// create catalog layer with custom draw function\r\nvar cat = A.catalog({name: 'Virgo cluster', shape: drawFunction});\r\n// add sources to the new layer\r\ncat.addSources([M87, M49, M100, M84, M60, NGC4388, NGC4261, M86]);\r\naladin.addCatalog(cat);*/\r\n/**\r\n * Operates background video on the homepage, if it's a mobile devicde or the browser doen't support HTML5 video\r\n * It fallf back to a background image\r\n *\r\n * @namespace SETI\r\n * @name SETI.BackgroundVideo\r\n *\r\n */\r\nSETI.BackgroundVideo = (/** @lends SETI.BackgroundVideo */function() {\r\n\r\n    var $body,\r\n        $page,\r\n        $hero,\r\n        videoPlayingModifier = 'home-hero--video-playing',\r\n        videoSource,\r\n        bgVideoElement,\r\n        videoTemplate,\r\n        hasSeenHero;\r\n\r\n    /**\r\n     * Initialize the module\r\n     *\r\n     * @public\r\n     * @returns {void}\r\n     */\r\n    function init() {\r\n        hasSeenHero = window.getCookie('clickedHero');\r\n\r\n        if(!SETI.mobile && hasSeenHero !== '1') {\r\n            initDOMElements();\r\n            addVideo();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Get DOM elements for the module\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    function initDOMElements() {\r\n        $body = SETI.Performance.getCachedDOM().$body;\r\n        $page = SETI.Performance.getCachedDOM().$page;\r\n        $hero = $('#js-home-hero');\r\n        videoSource = $body.data('video-source');\r\n        videoTemplate = Handlebars.compile(document.getElementById('bg-video').innerHTML);\r\n    }\r\n\r\n    function addVideo() {\r\n        if(!SETI.mobile && Modernizr.video && Modernizr.videoloop) {\r\n            console.log('add video');\r\n            $page.after(videoTemplate({videoSource: videoSource}));\r\n            bgVideoElement = $('[data-bg-video]')[0];\r\n\r\n            bgVideoElement.addEventListener('playing', function() {\r\n                $hero.addClass(videoPlayingModifier);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function getVideoElement() {\r\n        if(bgVideoElement) {\r\n            return bgVideoElement;\r\n        }\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        getBgVideo: getVideoElement\r\n    };\r\n\r\n}());\r\n\r\n/**\r\n * Responsible for hiding the 'hero' on the homepage that is only visible to 1st time visitors\r\n * Also places cookie so that the UI state is preserved when navigating back to the hamepage in the same session \r\n *\r\n * @namespace SETI\r\n * @name SETI.Hero\r\n *\r\n */\r\nSETI.Hero = (/** @lends SETI.Hero */function() {\r\n\r\n\tvar $hero,\r\n\t\t$btn,\r\n\t\t$html,\r\n\t\tbgVideo,\r\n\t\t$aladin;\r\n\r\n\t/**\r\n\t * Initialize the module\r\n\t *\r\n\t * @public\r\n\t * @returns {void}\r\n\t */\r\n\tfunction init() {\r\n\t\tinitDOMElements();\r\n        if($hero.length) {\r\n\t\t\t$btn.on({\r\n\t\t\t\tclick: function() {\r\n\t\t\t\t\tif(Modernizr.cssanimations) {\r\n\t\t\t\t\t\t$html.addClass('hide-hero');\r\n\r\n\t\t\t\t\t\t$btn.on({\r\n\t\t\t\t\t\t\tanimationend: function() {\r\n\t\t\t\t\t\t\t\t$hero.fadeOut(180, function() {\r\n                                    // animate in the controls\r\n                                    $aladin.addClass('aladin--show');\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$hero.fadeOut(180, function() {\r\n                            // animate in the controls\r\n                            $aladin.addClass('aladin--show');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.setCookie('clickedHero', 1);\r\n\t\t\t\t\tif(bgVideo) {\r\n\t\t\t\t\t\tbgVideo.pause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n        }\r\n\t}\r\n\r\n\t/**\r\n\t * Get DOM elements for the module\r\n\t *\r\n\t * @private\r\n\t * @returns {void}\r\n\t */\r\n\tfunction initDOMElements() {\r\n        $hero = $('#js-home-hero');\r\n\t\tif($hero.length) {\r\n\t\t\t$btn = $('#js-hide-home-hero');\r\n\t\t\t$html = SETI.Performance.getCachedDOM().$html;\r\n            bgVideo = SETI.BackgroundVideo.getBgVideo();\r\n            $aladin = $('#js-aladin');\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tinit: init\r\n\t};\r\n\r\n}());\r\n/**\r\n * Main subclass for the homepage application class\r\n * All classes for the functionality needed only on the homepage (everything related to Aladin and renedirng the overlay view)\r\n * goes here\r\n *\r\n * @namespace SETI\r\n * @name SETI.Home\r\n * @returns {Object}\r\n */\r\nSETI.Home = (/** @lends SETI.Home */function () {\r\n\r\n\tvar instance;\r\n\r\n\t/**\r\n\t * Initialize application and needed subclasses\r\n\t *\r\n\t * @public\r\n\t * @returns {void}\r\n\t */\r\n\tfunction init() {\r\n        SETI.BackgroundVideo.init();\r\n        SETI.Hero.init();\r\n        SETI.Aladin.init();\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Get singleton SETI.Home instance\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @memberof SETI.Home\r\n\t\t * @returns {SETI.Home}\r\n\t\t */\r\n\t\tgetInstance: function () {\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstance = init();\r\n\t\t\t}\r\n\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t};\r\n\r\n}());"]}
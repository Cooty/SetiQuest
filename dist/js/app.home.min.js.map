{"version":3,"sources":["app.home.min.js"],"names":["SETI","Aladin","init","mobile","initDOMElements","container","render","addEvents","getObservationData","promise","$","ajax","url","$aladinAppContainer","data","done","fail","errorHandler","always","requestHandler","aladinInstance","A","aladin","showReticle","fov","showLayersControl","showGotoControl","showZoomControl","showFrame","showCooGrid","showShareControl","log","fullScreen","showFullscreenControl","target","$fullScreenBtn","on","click","toggleFullscreen","document","getElementById","aladinAppContainer","$zoomInBtn","find","$zoomOutBtn","$constellationsBtn","$setCenterBtn","isFullScreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","this","toggleClass","blur","BackgroundVideo","hasSeenHero","window","getCookie","addVideo","$body","Performance","getCachedDOM","$page","$hero","videoSource","videoTemplate","Handlebars","compile","innerHTML","Modernizr","video","videoloop","after","bgVideoElement","addEventListener","addClass","videoPlayingModifier","getVideoElement","getBgVideo","Hero","length","$btn","cssanimations","$html","animationend","fadeOut","$aladin","setCookie","bgVideo","pause","Home","instance","getInstance"],"mappings":"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","file":"app.home.min.js","sourcesContent":["/**\r\n * Responsible for showing Aladin starmap on the homepage (initialy hidden)\r\n *\r\n * @namespace SETI\r\n * @name SETI.Aladin\r\n *\r\n */\r\nSETI.Aladin = (/** @lends SETI.Aladin */function() {\r\n\r\n\tvar aladinInstance,\r\n        container,\r\n        $zoomInBtn,\r\n        $aladinAppContainer,\r\n        aladinAppContainer,\r\n        $zoomOutBtn,\r\n        $constellationsBtn,\r\n        $setCenterBtn,\r\n        $fullScreenBtn,\r\n        isFullScreen = false;\r\n\r\n\t/**\r\n\t * Initialize the module\r\n\t *\r\n\t * @public\r\n\t * @returns {void}\r\n\t */\r\n\tfunction init() {\r\n\t    if(!SETI.mobile) {\r\n            initDOMElements();\r\n            if(container) {\r\n                render();\r\n                addEvents();\r\n                getObservationData();\r\n            }\r\n        }\r\n\t}\r\n\r\n\tfunction getObservationData() {\r\n        var promise = $.ajax({\r\n            url: $aladinAppContainer.data('service-url')\r\n        });\r\n\r\n        promise.done(function(data) {\r\n            console.log(data);\r\n        });\r\n        promise.fail(errorHandler);\r\n        promise.always(requestHandler);\r\n    }\r\n\r\n    function requestHandler() {\r\n\t    console.log('do this stuff whenever data is revieved from server');\r\n    }\r\n\r\n    function errorHandler() {\r\n        console.log('do this stuff when error happens');\r\n    }\r\n\r\n    /**\r\n     * Initialize and render the star map to the DOM\r\n     * \r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    function render() {\r\n        aladinInstance = A.aladin(container, {\r\n            showReticle: false,\r\n            fov: 2.0 + 20. * 0.6,\r\n            showLayersControl: false,\r\n            showGotoControl: false,\r\n            showZoomControl: false,\r\n            showFrame: false,\r\n            showCooGrid: false,\r\n            showShareControl: false,\r\n            log: false,\r\n            fullScreen: false,\r\n            showFullscreenControl: false,\r\n            target: 0.0 + \",\" + 0.0\r\n        });\r\n    }\r\n\r\n    function addEvents() {\r\n        $fullScreenBtn.on({\r\n            click: toggleFullscreen\r\n        });\r\n    }\r\n\r\n\t/**\r\n\t * Get DOM elements for the module\r\n\t *\r\n\t * @private\r\n\t * @returns {void}\r\n\t */\r\n\tfunction initDOMElements() {\r\n        container = document.getElementById('js-aladin-container');\r\n\r\n        $aladinAppContainer = $('#js-aladin');\r\n        aladinAppContainer = $aladinAppContainer[0];\r\n        $zoomInBtn = $aladinAppContainer.find('[data-zoom-in]');\r\n        $zoomOutBtn = $aladinAppContainer.find('[data-zoom-out]');\r\n        $constellationsBtn = $aladinAppContainer.find('[data-constellations]');\r\n        $setCenterBtn = $aladinAppContainer.find('[data-set-center]');\r\n        $fullScreenBtn = $aladinAppContainer.find('[data-fullscreen]');\r\n\t}\r\n\r\n\tfunction toggleFullscreen() {\r\n        if(!isFullScreen) {\r\n            if (aladinAppContainer.requestFullscreen) {\r\n                aladinAppContainer.requestFullscreen();\r\n                isFullScreen = true;\r\n            } else if (aladinAppContainer.webkitRequestFullscreen) {\r\n                aladinAppContainer.webkitRequestFullscreen();\r\n                isFullScreen = true;\r\n            } else if (aladinAppContainer.mozRequestFullScreen) {\r\n                aladinAppContainer.mozRequestFullScreen();\r\n                isFullScreen = true;\r\n            } else if (aladinAppContainer.msRequestFullscreen) {\r\n                aladinAppContainer.msRequestFullscreen();\r\n                isFullScreen = true;\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n                isFullScreen = false;\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n                isFullScreen = false;\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n                isFullScreen = false;\r\n            } else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n                isFullScreen = false;\r\n            }\r\n        }\r\n\r\n        $(this).toggleClass('reverse-arrows');\r\n\r\n        this.blur();\r\n\r\n    }\r\n\r\n\treturn {\r\n\t\tinit: init\r\n\t};\r\n\r\n}());        \r\n/**\r\n *\r\n */\r\n\r\n/**\r\n * Operates background video on the homepage, if it's a mobile devicde or the browser doen't support HTML5 video\r\n * It fallf back to a background image\r\n *\r\n * @namespace SETI\r\n * @name SETI.BackgroundVideo\r\n *\r\n */\r\nSETI.BackgroundVideo = (/** @lends SETI.BackgroundVideo */function() {\r\n\r\n    var $body,\r\n        $page,\r\n        $hero,\r\n        videoPlayingModifier = 'home-hero--video-playing',\r\n        videoSource,\r\n        bgVideoElement,\r\n        videoTemplate,\r\n        hasSeenHero;\r\n\r\n    /**\r\n     * Initialize the module\r\n     *\r\n     * @public\r\n     * @returns {void}\r\n     */\r\n    function init() {\r\n        hasSeenHero = window.getCookie('clickedHero');\r\n\r\n        console.log(hasSeenHero);\r\n\r\n        if(!SETI.mobile && hasSeenHero !== '1') {\r\n            initDOMElements();\r\n            addVideo();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Get DOM elements for the module\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    function initDOMElements() {\r\n        $body = SETI.Performance.getCachedDOM().$body;\r\n        $page = SETI.Performance.getCachedDOM().$page;\r\n        $hero = $('#js-home-hero');\r\n        videoSource = $body.data('video-source');\r\n        videoTemplate = Handlebars.compile(document.getElementById('bg-video').innerHTML);\r\n    }\r\n\r\n    function addVideo() {\r\n        if(!SETI.mobile && Modernizr.video && Modernizr.videoloop) {\r\n            console.log('add video');\r\n            $page.after(videoTemplate({videoSource: videoSource}));\r\n            bgVideoElement = $('[data-bg-video]')[0];\r\n\r\n            bgVideoElement.addEventListener('playing', function() {\r\n                $hero.addClass(videoPlayingModifier);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function getVideoElement() {\r\n        if(bgVideoElement) {\r\n            return bgVideoElement;\r\n        }\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        getBgVideo: getVideoElement\r\n    };\r\n\r\n}());\r\n\r\n/**\r\n * Responsible for hiding the 'hero' on the homepage that is only visible to 1st time visitors\r\n * Also places cookie so that the UI state is preserved when navigating back to the hamepage in the same session \r\n *\r\n * @namespace SETI\r\n * @name SETI.Hero\r\n *\r\n */\r\nSETI.Hero = (/** @lends SETI.Hero */function() {\r\n\r\n\tvar $hero,\r\n\t\t$btn,\r\n\t\t$html,\r\n\t\tbgVideo,\r\n\t\t$aladin;\r\n\r\n\t/**\r\n\t * Initialize the module\r\n\t *\r\n\t * @public\r\n\t * @returns {void}\r\n\t */\r\n\tfunction init() {\r\n\t\tinitDOMElements();\r\n        if($hero.length) {\r\n\t\t\t$btn.on({\r\n\t\t\t\tclick: function() {\r\n\t\t\t\t\tif(Modernizr.cssanimations) {\r\n\t\t\t\t\t\t$html.addClass('hide-hero');\r\n\r\n\t\t\t\t\t\t$btn.on({\r\n\t\t\t\t\t\t\tanimationend: function() {\r\n\t\t\t\t\t\t\t\t$hero.fadeOut(180, function() {\r\n                                    // animate in the controls\r\n                                    $aladin.addClass('aladin--show');\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$hero.fadeOut(180, function() {\r\n                            // animate in the controls\r\n                            $aladin.addClass('aladin--show');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.setCookie('clickedHero', 1);\r\n\t\t\t\t\tif(bgVideo) {\r\n\t\t\t\t\t\tbgVideo.pause();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n        }\r\n\t}\r\n\r\n\t/**\r\n\t * Get DOM elements for the module\r\n\t *\r\n\t * @private\r\n\t * @returns {void}\r\n\t */\r\n\tfunction initDOMElements() {\r\n        $hero = $('#js-home-hero');\r\n\t\tif($hero.length) {\r\n\t\t\t$btn = $('#js-hide-home-hero');\r\n\t\t\t$html = SETI.Performance.getCachedDOM().$html;\r\n            bgVideo = SETI.BackgroundVideo.getBgVideo();\r\n            $aladin = $('#js-aladin');\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tinit: init\r\n\t};\r\n\r\n}());\r\n/**\r\n * Main subclass for the homepage application class\r\n * All classes for the functionality needed only on the homepage (everything related to Aladin and renedirng the overlay view)\r\n * goes here\r\n *\r\n * @namespace SETI\r\n * @name SETI.Home\r\n * @returns {Object}\r\n */\r\nSETI.Home = (/** @lends SETI.Home */function () {\r\n\r\n\tvar instance;\r\n\r\n\t/**\r\n\t * Initialize application and needed subclasses\r\n\t *\r\n\t * @public\r\n\t * @returns {void}\r\n\t */\r\n\tfunction init() {\r\n        SETI.BackgroundVideo.init();\r\n        SETI.Hero.init();\r\n        SETI.Aladin.init();\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Get singleton SETI.Home instance\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @memberof SETI.Home\r\n\t\t * @returns {SETI.Home}\r\n\t\t */\r\n\t\tgetInstance: function () {\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstance = init();\r\n\t\t\t}\r\n\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t};\r\n\r\n}());"]}
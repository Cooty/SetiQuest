/**
 * Handles the 3rd party jQuery plugins we use on the Aladin canvas
 * For docs on the tooltip plugin see.: https://iamceege.github.io/tooltipster/
 *
 * @namespace SETI
 * @name SETI.Plugins
 *
 */
SETI.Plugins = (/** @lends SETI.Plugins */function() {

    var $tooltips,
        theme = 'tooltipster-borderless';

    /**
     * Initialize the module
     *
     * @public
     * @returns {void}
     */
    function init() {
        initDOMElements();
        initTooltips();
    }

    function initTooltips() {

        if($tooltips.length) {
            $tooltips.each(function() {
                var $tooltip = $(this);

                if($tooltip.data('side')) {
                    $tooltip.tooltipster({
                        theme: theme,
                        side: $tooltip.data('side')
                    });
                } else {
                    $tooltip.tooltipster({
                        theme: theme,
                        side: $tooltip.data('side')
                    });
                }

            });
        }

    }

    /**
     * Get DOM elements for the module
     *
     * @private
     * @returns {void}
     */
    function initDOMElements() {
        $tooltips = $('[data-tooltip]');
    }


    return {
        init: init
    };

}());

/**
 * Responsible for showing Aladin starmap on the homepage (initialy hidden)
 *
 * @namespace SETI
 * @name SETI.Aladin
 *
 */
SETI.Aladin = (/** @lends SETI.Aladin */function() {

	var aladinInstance,
        container,
        $zoomInBtn,
        $aladinAppContainer,
        aladinAppContainer,
        $zoomOutBtn,
        $constellationsBtn,
        $setCenterBtn,
        $fullScreenBtn,
        $body,
        body,
        isFullScreen = false;

	/**
	 * Initialize the module
	 *
	 * @public
	 * @returns {void}
	 */
	function init() {
	    if(!SETI.mobile) {
            initDOMElements();
            if(container) {
                render();
                addEvents();
                getObservationData();
                SETI.Plugins.init();
            }
        }
	}

	function getObservationData() {
        var promise = $.ajax({
            url: $aladinAppContainer.data('service-url')
        });

        promise.done(function(data) {
            console.log(data);
        });
        promise.fail(errorHandler);
        promise.always(requestHandler);
    }

    function requestHandler() {
	    console.log('do this stuff whenever data is revieved from server');
    }

    function errorHandler() {
        console.log('do this stuff when error happens');
    }

    /**
     * Initialize and render the star map to the DOM
     * 
     * @private
     * @returns {void}
     */
    function render() {
        aladinInstance = A.aladin(container, {
            showReticle: false,
            fov: 2.0 + 20. * 0.6,
            showLayersControl: false,
            showGotoControl: false,
            showZoomControl: false,
            showFrame: false,
            showCooGrid: false,
            showShareControl: false,
            log: false,
            fullScreen: false,
            showFullscreenControl: false,
            target: 0.0 + "," + 0.0
        });
    }

    function addEvents() {
        $fullScreenBtn.on({
            click: toggleFullscreen
        });
    }

	/**
	 * Get DOM elements for the module
	 *
	 * @private
	 * @returns {void}
	 */
	function initDOMElements() {
        container = document.getElementById('js-aladin-container');
        $body = SETI.Performance.getCachedDOM().$body;
        body = $body[0];

        $aladinAppContainer = $('#js-aladin');
        aladinAppContainer = $aladinAppContainer[0];
        $zoomInBtn = $aladinAppContainer.find('[data-zoom-in]');
        $zoomOutBtn = $aladinAppContainer.find('[data-zoom-out]');
        $constellationsBtn = $aladinAppContainer.find('[data-constellations]');
        $setCenterBtn = $aladinAppContainer.find('[data-set-center]');
        $fullScreenBtn = $aladinAppContainer.find('[data-fullscreen]');
	}

	function toggleFullscreen() {
        if(!isFullScreen) {
            if (body.requestFullscreen) {
                body.requestFullscreen();
                isFullScreen = true;
            } else if (body.webkitRequestFullscreen) {
                body.webkitRequestFullscreen();
                isFullScreen = true;
            } else if (body.mozRequestFullScreen) {
                body.mozRequestFullScreen();
                isFullScreen = true;
            } else if (body.msRequestFullscreen) {
                body.msRequestFullscreen();
                isFullScreen = true;
            }
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
                isFullScreen = false;
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
                isFullScreen = false;
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
                isFullScreen = false;
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
                isFullScreen = false;
            }
        }

        $(this).toggleClass('reverse-arrows');
        $body.toggleClass('aladin-fullscreen');

        this.blur();

    }

	return {
		init: init
	};

}());        
/**
 * Operates background video on the homepage, if it's a mobile devicde or the browser doen't support HTML5 video
 * It fallf back to a background image
 *
 * @namespace SETI
 * @name SETI.BackgroundVideo
 *
 */
SETI.BackgroundVideo = (/** @lends SETI.BackgroundVideo */function() {

    var $body,
        $page,
        $hero,
        videoPlayingModifier = 'home-hero--video-playing',
        videoSource,
        bgVideoElement,
        videoTemplate,
        hasSeenHero;

    /**
     * Initialize the module
     *
     * @public
     * @returns {void}
     */
    function init() {
        hasSeenHero = window.getCookie('clickedHero');

        if(!SETI.mobile && hasSeenHero !== '1') {
            initDOMElements();
            addVideo();
        }
    }



    /**
     * Get DOM elements for the module
     *
     * @private
     * @returns {void}
     */
    function initDOMElements() {
        $body = SETI.Performance.getCachedDOM().$body;
        $page = SETI.Performance.getCachedDOM().$page;
        $hero = $('#js-home-hero');
        videoSource = $body.data('video-source');
        videoTemplate = Handlebars.compile(document.getElementById('bg-video').innerHTML);
    }

    function addVideo() {
        if(!SETI.mobile && Modernizr.video && Modernizr.videoloop) {
            console.log('add video');
            $page.after(videoTemplate({videoSource: videoSource}));
            bgVideoElement = $('[data-bg-video]')[0];

            bgVideoElement.addEventListener('playing', function() {
                $hero.addClass(videoPlayingModifier);
            });

        }
    }


    function getVideoElement() {
        if(bgVideoElement) {
            return bgVideoElement;
        }
    }

    return {
        init: init,
        getBgVideo: getVideoElement
    };

}());

/**
 * Responsible for hiding the 'hero' on the homepage that is only visible to 1st time visitors
 * Also places cookie so that the UI state is preserved when navigating back to the hamepage in the same session 
 *
 * @namespace SETI
 * @name SETI.Hero
 *
 */
SETI.Hero = (/** @lends SETI.Hero */function() {

	var $hero,
		$btn,
		$html,
		bgVideo,
		$aladin;

	/**
	 * Initialize the module
	 *
	 * @public
	 * @returns {void}
	 */
	function init() {
		initDOMElements();
        if($hero.length) {
			$btn.on({
				click: function() {
					if(Modernizr.cssanimations) {
						$html.addClass('hide-hero');

						$btn.on({
							animationend: function() {
								$hero.fadeOut(180, function() {
                                    // animate in the controls
                                    $aladin.addClass('aladin--show');
								});
							}
						});

					} else {
						$hero.fadeOut(180, function() {
                            // animate in the controls
                            $aladin.addClass('aladin--show');
						});
					}
					
					window.setCookie('clickedHero', 1);
					if(bgVideo) {
						bgVideo.pause();
					}
				}
			});

        }
	}

	/**
	 * Get DOM elements for the module
	 *
	 * @private
	 * @returns {void}
	 */
	function initDOMElements() {
        $hero = $('#js-home-hero');
		if($hero.length) {
			$btn = $('#js-hide-home-hero');
			$html = SETI.Performance.getCachedDOM().$html;
            bgVideo = SETI.BackgroundVideo.getBgVideo();
            $aladin = $('#js-aladin');
		}
	}

	return {
		init: init
	};

}());
/**
 * Main subclass for the homepage application class
 * All classes for the functionality needed only on the homepage (everything related to Aladin and renedirng the overlay view)
 * goes here
 *
 * @namespace SETI
 * @name SETI.Home
 * @returns {Object}
 */
SETI.Home = (/** @lends SETI.Home */function () {

	var instance;

	/**
	 * Initialize application and needed subclasses
	 *
	 * @public
	 * @returns {void}
	 */
	function init() {
        SETI.BackgroundVideo.init();
        SETI.Hero.init();
        SETI.Aladin.init();
	}

	return {

		/**
		 * Get singleton SETI.Home instance
		 *
		 * @public
		 * @memberof SETI.Home
		 * @returns {SETI.Home}
		 */
		getInstance: function () {
			if (!instance) {
				instance = init();
			}

			return instance;
		}
	};

}());